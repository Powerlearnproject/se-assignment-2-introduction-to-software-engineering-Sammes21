Software Engineering is the branch of computer science that deals with the design, development, testing, and maintenance of software applications.
Software Engineering differ from traditional programming ,while programming is centered around the code, software engineering is extended over the entire lifecycle of the software, from conception to maintenance, emphasizing a structured and methodical approach to software development.
Phases of the Software Development Life Cycle : Scrum, an Agile framework, emphasizes iterative development, team collaboration, and flexibility to change. Work is divided into sprints. Waterfall is a linear, sequential approach where each phase must be completed before proceeding to the next, making it less adaptable to change
Diffent between Agile VS Waterfall : 1.Risk management :agile has Continuous risk management while waterfall risk management is at the beginning of the project,2 :Documentation, agile has Minimal documentation required while aterfall has extensive documentation required 3.Time and cost ,agile challenging to estimate time and cost while waterfall is easy to estimate time and cost 
Requirements Engineering is the process of identifying, eliciting, analyzing, specifying, validating, and managing the needs and expectations of stakeholders for a software system. The software development lifecycle (SDLC) is the cost-effective and time-efficient process that development teams use to design and build high-quality software. The goal of SDLC is to minimize project risks through forward planning so that software meets customer expectations during production and beyond
Modularity in software design is a technique where complex software is divided into smaller, independent modules, such as functions, classes, or components. It facilitates easier management and understanding of complex systems by breaking them down into digestible parts.
In general, mainly four levels of testing in software testing: Unit Testing, System Testing, Integration Testing, and Acceptance Testing.Testing is an essential risk mitigation strategy. It identifies potential issues before they reach end-users, reducing the likelihood of software failures and the associated financial and repetitional risks. Early detection and resolution of problems save time and resources in the long run
Version control software keeps track of every modification to the code in a special kind of database. If a mistake is made, developers can turn back the clock and compare earlier versions of the code to help fix the mistake while minimizing disruption to all team members.
